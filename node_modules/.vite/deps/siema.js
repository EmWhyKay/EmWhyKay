import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/siema/dist/siema.min.js
var require_siema_min = __commonJS({
  "node_modules/siema/dist/siema.min.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define("Siema", [], t) : "object" == typeof exports ? exports.Siema = t() : e.Siema = t();
    }("undefined" != typeof self ? self : exports, function() {
      return function(e) {
        function t(r) {
          if (i[r])
            return i[r].exports;
          var n = i[r] = { i: r, l: false, exports: {} };
          return e[r].call(n.exports, n, n.exports, t), n.l = true, n.exports;
        }
        var i = {};
        return t.m = e, t.c = i, t.d = function(e2, i2, r) {
          t.o(e2, i2) || Object.defineProperty(e2, i2, { configurable: false, enumerable: true, get: r });
        }, t.n = function(e2) {
          var i2 = e2 && e2.__esModule ? function() {
            return e2.default;
          } : function() {
            return e2;
          };
          return t.d(i2, "a", i2), i2;
        }, t.o = function(e2, t2) {
          return Object.prototype.hasOwnProperty.call(e2, t2);
        }, t.p = "", t(t.s = 0);
      }([function(e, t, i) {
        "use strict";
        function r(e2, t2) {
          if (!(e2 instanceof t2))
            throw new TypeError("Cannot call a class as a function");
        }
        Object.defineProperty(t, "__esModule", { value: true });
        var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e2) {
          return typeof e2;
        } : function(e2) {
          return e2 && "function" == typeof Symbol && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
        }, s = function() {
          function e2(e3, t2) {
            for (var i2 = 0; i2 < t2.length; i2++) {
              var r2 = t2[i2];
              r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(e3, r2.key, r2);
            }
          }
          return function(t2, i2, r2) {
            return i2 && e2(t2.prototype, i2), r2 && e2(t2, r2), t2;
          };
        }(), l = function() {
          function e2(t2) {
            var i2 = this;
            if (r(this, e2), this.config = e2.mergeSettings(t2), this.selector = "string" == typeof this.config.selector ? document.querySelector(this.config.selector) : this.config.selector, null === this.selector)
              throw new Error("Something wrong with your selector ðŸ˜­");
            this.resolveSlidesNumber(), this.selectorWidth = this.selector.offsetWidth, this.innerElements = [].slice.call(this.selector.children), this.currentSlide = this.config.loop ? this.config.startIndex % this.innerElements.length : Math.max(0, Math.min(this.config.startIndex, this.innerElements.length - this.perPage)), this.transformProperty = e2.webkitOrNot(), ["resizeHandler", "touchstartHandler", "touchendHandler", "touchmoveHandler", "mousedownHandler", "mouseupHandler", "mouseleaveHandler", "mousemoveHandler", "clickHandler"].forEach(function(e3) {
              i2[e3] = i2[e3].bind(i2);
            }), this.init();
          }
          return s(e2, [{ key: "attachEvents", value: function() {
            window.addEventListener("resize", this.resizeHandler), this.config.draggable && (this.pointerDown = false, this.drag = { startX: 0, endX: 0, startY: 0, letItGo: null, preventClick: false }, this.selector.addEventListener("touchstart", this.touchstartHandler), this.selector.addEventListener("touchend", this.touchendHandler), this.selector.addEventListener("touchmove", this.touchmoveHandler), this.selector.addEventListener("mousedown", this.mousedownHandler), this.selector.addEventListener("mouseup", this.mouseupHandler), this.selector.addEventListener("mouseleave", this.mouseleaveHandler), this.selector.addEventListener("mousemove", this.mousemoveHandler), this.selector.addEventListener("click", this.clickHandler));
          } }, { key: "detachEvents", value: function() {
            window.removeEventListener("resize", this.resizeHandler), this.selector.removeEventListener("touchstart", this.touchstartHandler), this.selector.removeEventListener("touchend", this.touchendHandler), this.selector.removeEventListener("touchmove", this.touchmoveHandler), this.selector.removeEventListener("mousedown", this.mousedownHandler), this.selector.removeEventListener("mouseup", this.mouseupHandler), this.selector.removeEventListener("mouseleave", this.mouseleaveHandler), this.selector.removeEventListener("mousemove", this.mousemoveHandler), this.selector.removeEventListener("click", this.clickHandler);
          } }, { key: "init", value: function() {
            this.attachEvents(), this.selector.style.overflow = "hidden", this.selector.style.direction = this.config.rtl ? "rtl" : "ltr", this.buildSliderFrame(), this.config.onInit.call(this);
          } }, { key: "buildSliderFrame", value: function() {
            var e3 = this.selectorWidth / this.perPage, t2 = this.config.loop ? this.innerElements.length + 2 * this.perPage : this.innerElements.length;
            this.sliderFrame = document.createElement("div"), this.sliderFrame.style.width = e3 * t2 + "px", this.enableTransition(), this.config.draggable && (this.selector.style.cursor = "-webkit-grab");
            var i2 = document.createDocumentFragment();
            if (this.config.loop)
              for (var r2 = this.innerElements.length - this.perPage; r2 < this.innerElements.length; r2++) {
                var n2 = this.buildSliderFrameItem(this.innerElements[r2].cloneNode(true));
                i2.appendChild(n2);
              }
            for (var s2 = 0; s2 < this.innerElements.length; s2++) {
              var l2 = this.buildSliderFrameItem(this.innerElements[s2]);
              i2.appendChild(l2);
            }
            if (this.config.loop)
              for (var o = 0; o < this.perPage; o++) {
                var a = this.buildSliderFrameItem(this.innerElements[o].cloneNode(true));
                i2.appendChild(a);
              }
            this.sliderFrame.appendChild(i2), this.selector.innerHTML = "", this.selector.appendChild(this.sliderFrame), this.slideToCurrent();
          } }, { key: "buildSliderFrameItem", value: function(e3) {
            var t2 = document.createElement("div");
            return t2.style.cssFloat = this.config.rtl ? "right" : "left", t2.style.float = this.config.rtl ? "right" : "left", t2.style.width = (this.config.loop ? 100 / (this.innerElements.length + 2 * this.perPage) : 100 / this.innerElements.length) + "%", t2.appendChild(e3), t2;
          } }, { key: "resolveSlidesNumber", value: function() {
            if ("number" == typeof this.config.perPage)
              this.perPage = this.config.perPage;
            else if ("object" === n(this.config.perPage)) {
              this.perPage = 1;
              for (var e3 in this.config.perPage)
                window.innerWidth >= e3 && (this.perPage = this.config.perPage[e3]);
            }
          } }, { key: "prev", value: function() {
            var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, t2 = arguments[1];
            if (!(this.innerElements.length <= this.perPage)) {
              var i2 = this.currentSlide;
              if (this.config.loop) {
                if (this.currentSlide - e3 < 0) {
                  this.disableTransition();
                  var r2 = this.currentSlide + this.innerElements.length, n2 = this.perPage, s2 = r2 + n2, l2 = (this.config.rtl ? 1 : -1) * s2 * (this.selectorWidth / this.perPage), o = this.config.draggable ? this.drag.endX - this.drag.startX : 0;
                  this.sliderFrame.style[this.transformProperty] = "translate3d(" + (l2 + o) + "px, 0, 0)", this.currentSlide = r2 - e3;
                } else
                  this.currentSlide = this.currentSlide - e3;
              } else
                this.currentSlide = Math.max(this.currentSlide - e3, 0);
              i2 !== this.currentSlide && (this.slideToCurrent(this.config.loop), this.config.onChange.call(this), t2 && t2.call(this));
            }
          } }, { key: "next", value: function() {
            var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, t2 = arguments[1];
            if (!(this.innerElements.length <= this.perPage)) {
              var i2 = this.currentSlide;
              if (this.config.loop) {
                if (this.currentSlide + e3 > this.innerElements.length - this.perPage) {
                  this.disableTransition();
                  var r2 = this.currentSlide - this.innerElements.length, n2 = this.perPage, s2 = r2 + n2, l2 = (this.config.rtl ? 1 : -1) * s2 * (this.selectorWidth / this.perPage), o = this.config.draggable ? this.drag.endX - this.drag.startX : 0;
                  this.sliderFrame.style[this.transformProperty] = "translate3d(" + (l2 + o) + "px, 0, 0)", this.currentSlide = r2 + e3;
                } else
                  this.currentSlide = this.currentSlide + e3;
              } else
                this.currentSlide = Math.min(this.currentSlide + e3, this.innerElements.length - this.perPage);
              i2 !== this.currentSlide && (this.slideToCurrent(this.config.loop), this.config.onChange.call(this), t2 && t2.call(this));
            }
          } }, { key: "disableTransition", value: function() {
            this.sliderFrame.style.webkitTransition = "all 0ms " + this.config.easing, this.sliderFrame.style.transition = "all 0ms " + this.config.easing;
          } }, { key: "enableTransition", value: function() {
            this.sliderFrame.style.webkitTransition = "all " + this.config.duration + "ms " + this.config.easing, this.sliderFrame.style.transition = "all " + this.config.duration + "ms " + this.config.easing;
          } }, { key: "goTo", value: function(e3, t2) {
            if (!(this.innerElements.length <= this.perPage)) {
              var i2 = this.currentSlide;
              this.currentSlide = this.config.loop ? e3 % this.innerElements.length : Math.min(Math.max(e3, 0), this.innerElements.length - this.perPage), i2 !== this.currentSlide && (this.slideToCurrent(), this.config.onChange.call(this), t2 && t2.call(this));
            }
          } }, { key: "slideToCurrent", value: function(e3) {
            var t2 = this, i2 = this.config.loop ? this.currentSlide + this.perPage : this.currentSlide, r2 = (this.config.rtl ? 1 : -1) * i2 * (this.selectorWidth / this.perPage);
            e3 ? requestAnimationFrame(function() {
              requestAnimationFrame(function() {
                t2.enableTransition(), t2.sliderFrame.style[t2.transformProperty] = "translate3d(" + r2 + "px, 0, 0)";
              });
            }) : this.sliderFrame.style[this.transformProperty] = "translate3d(" + r2 + "px, 0, 0)";
          } }, { key: "updateAfterDrag", value: function() {
            var e3 = (this.config.rtl ? -1 : 1) * (this.drag.endX - this.drag.startX), t2 = Math.abs(e3), i2 = this.config.multipleDrag ? Math.ceil(t2 / (this.selectorWidth / this.perPage)) : 1, r2 = e3 > 0 && this.currentSlide - i2 < 0, n2 = e3 < 0 && this.currentSlide + i2 > this.innerElements.length - this.perPage;
            e3 > 0 && t2 > this.config.threshold && this.innerElements.length > this.perPage ? this.prev(i2) : e3 < 0 && t2 > this.config.threshold && this.innerElements.length > this.perPage && this.next(i2), this.slideToCurrent(r2 || n2);
          } }, { key: "resizeHandler", value: function() {
            this.resolveSlidesNumber(), this.currentSlide + this.perPage > this.innerElements.length && (this.currentSlide = this.innerElements.length <= this.perPage ? 0 : this.innerElements.length - this.perPage), this.selectorWidth = this.selector.offsetWidth, this.buildSliderFrame();
          } }, { key: "clearDrag", value: function() {
            this.drag = { startX: 0, endX: 0, startY: 0, letItGo: null, preventClick: this.drag.preventClick };
          } }, { key: "touchstartHandler", value: function(e3) {
            -1 !== ["TEXTAREA", "OPTION", "INPUT", "SELECT"].indexOf(e3.target.nodeName) || (e3.stopPropagation(), this.pointerDown = true, this.drag.startX = e3.touches[0].pageX, this.drag.startY = e3.touches[0].pageY);
          } }, { key: "touchendHandler", value: function(e3) {
            e3.stopPropagation(), this.pointerDown = false, this.enableTransition(), this.drag.endX && this.updateAfterDrag(), this.clearDrag();
          } }, { key: "touchmoveHandler", value: function(e3) {
            if (e3.stopPropagation(), null === this.drag.letItGo && (this.drag.letItGo = Math.abs(this.drag.startY - e3.touches[0].pageY) < Math.abs(this.drag.startX - e3.touches[0].pageX)), this.pointerDown && this.drag.letItGo) {
              e3.preventDefault(), this.drag.endX = e3.touches[0].pageX, this.sliderFrame.style.webkitTransition = "all 0ms " + this.config.easing, this.sliderFrame.style.transition = "all 0ms " + this.config.easing;
              var t2 = this.config.loop ? this.currentSlide + this.perPage : this.currentSlide, i2 = t2 * (this.selectorWidth / this.perPage), r2 = this.drag.endX - this.drag.startX, n2 = this.config.rtl ? i2 + r2 : i2 - r2;
              this.sliderFrame.style[this.transformProperty] = "translate3d(" + (this.config.rtl ? 1 : -1) * n2 + "px, 0, 0)";
            }
          } }, { key: "mousedownHandler", value: function(e3) {
            -1 !== ["TEXTAREA", "OPTION", "INPUT", "SELECT"].indexOf(e3.target.nodeName) || (e3.preventDefault(), e3.stopPropagation(), this.pointerDown = true, this.drag.startX = e3.pageX);
          } }, { key: "mouseupHandler", value: function(e3) {
            e3.stopPropagation(), this.pointerDown = false, this.selector.style.cursor = "-webkit-grab", this.enableTransition(), this.drag.endX && this.updateAfterDrag(), this.clearDrag();
          } }, { key: "mousemoveHandler", value: function(e3) {
            if (e3.preventDefault(), this.pointerDown) {
              "A" === e3.target.nodeName && (this.drag.preventClick = true), this.drag.endX = e3.pageX, this.selector.style.cursor = "-webkit-grabbing", this.sliderFrame.style.webkitTransition = "all 0ms " + this.config.easing, this.sliderFrame.style.transition = "all 0ms " + this.config.easing;
              var t2 = this.config.loop ? this.currentSlide + this.perPage : this.currentSlide, i2 = t2 * (this.selectorWidth / this.perPage), r2 = this.drag.endX - this.drag.startX, n2 = this.config.rtl ? i2 + r2 : i2 - r2;
              this.sliderFrame.style[this.transformProperty] = "translate3d(" + (this.config.rtl ? 1 : -1) * n2 + "px, 0, 0)";
            }
          } }, { key: "mouseleaveHandler", value: function(e3) {
            this.pointerDown && (this.pointerDown = false, this.selector.style.cursor = "-webkit-grab", this.drag.endX = e3.pageX, this.drag.preventClick = false, this.enableTransition(), this.updateAfterDrag(), this.clearDrag());
          } }, { key: "clickHandler", value: function(e3) {
            this.drag.preventClick && e3.preventDefault(), this.drag.preventClick = false;
          } }, { key: "remove", value: function(e3, t2) {
            if (e3 < 0 || e3 >= this.innerElements.length)
              throw new Error("Item to remove doesn't exist ðŸ˜­");
            var i2 = e3 < this.currentSlide, r2 = this.currentSlide + this.perPage - 1 === e3;
            (i2 || r2) && this.currentSlide--, this.innerElements.splice(e3, 1), this.buildSliderFrame(), t2 && t2.call(this);
          } }, { key: "insert", value: function(e3, t2, i2) {
            if (t2 < 0 || t2 > this.innerElements.length + 1)
              throw new Error("Unable to inset it at this index ðŸ˜­");
            if (-1 !== this.innerElements.indexOf(e3))
              throw new Error("The same item in a carousel? Really? Nope ðŸ˜­");
            var r2 = t2 <= this.currentSlide > 0 && this.innerElements.length;
            this.currentSlide = r2 ? this.currentSlide + 1 : this.currentSlide, this.innerElements.splice(t2, 0, e3), this.buildSliderFrame(), i2 && i2.call(this);
          } }, { key: "prepend", value: function(e3, t2) {
            this.insert(e3, 0), t2 && t2.call(this);
          } }, { key: "append", value: function(e3, t2) {
            this.insert(e3, this.innerElements.length + 1), t2 && t2.call(this);
          } }, { key: "destroy", value: function() {
            var e3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], t2 = arguments[1];
            if (this.detachEvents(), this.selector.style.cursor = "auto", e3) {
              for (var i2 = document.createDocumentFragment(), r2 = 0; r2 < this.innerElements.length; r2++)
                i2.appendChild(this.innerElements[r2]);
              this.selector.innerHTML = "", this.selector.appendChild(i2), this.selector.removeAttribute("style");
            }
            t2 && t2.call(this);
          } }], [{ key: "mergeSettings", value: function(e3) {
            var t2 = { selector: ".siema", duration: 200, easing: "ease-out", perPage: 1, startIndex: 0, draggable: true, multipleDrag: true, threshold: 20, loop: false, rtl: false, onInit: function() {
            }, onChange: function() {
            } }, i2 = e3;
            for (var r2 in i2)
              t2[r2] = i2[r2];
            return t2;
          } }, { key: "webkitOrNot", value: function() {
            return "string" == typeof document.documentElement.style.transform ? "transform" : "WebkitTransform";
          } }]), e2;
        }();
        t.default = l, e.exports = t.default;
      }]);
    });
  }
});
export default require_siema_min();
//# sourceMappingURL=siema.js.map
